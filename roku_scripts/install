#!/usr/bin/env bash

INCREMENTBUILDNO=false
while [ $# -gt 0 ]; do
    case "${1}" in
        -h|--help|help)
            echo 'usage: rokuinstall [channelpath] [-d|--device <rokuip>] [-u|--user <user:pass>]' >&2
            echo -e '\narguments:' >&2
            echo 'channelpath   location of channel code' >&2
            echo -e '\noptions:' >&2
            echo '-u|--user     device login creds' >&2
            echo '-d|--device   roku ip or hostname' >&2
            echo '--increment   increment build number' >&2
            exit 0
            ;;
        --increment)
            INCREMENTBUILDNO=true
            ;;
        -d|--device)
            ROKU_IP="${2}"
            shift
            ;;
        -u|--user)
            if [[ -n "${2}" && "${2}" =~ ':' ]]; then
                ROKU_USER="${2%%:*}"
                ROKU_PASS="${2#*:}"
                shift
            else
                echo 'usage: rokuinstall [channelpath] [<device>] [-u|--user <user:pass>]' >&2
                [ -z "${2}" ] && echo "error: arg missing after ${1}" >&2 || \
                echo 'error: missing pass' >&2
                exit 1
            fi
            ;;
        *)
            if [ "${1::1}" == '-' ]; then
                echo 'usage: rokuinstall [channelpath] [<device>] [-u|--user <user:pass>]' >&2
                echo "error: unexpected option: ${1}" >&2
                exit 1
            else
                CHANNEL_PATH="${1}"
            fi
            ;;
    esac
    shift
done

[ ! -z "${ROKU_USER}" ] || ROKU_USER='rokudev' # if device username differs from default, you can fill it in here
[ ! -z "${ROKU_PASS}" ] || ROKU_PASS='' # likewise device password can be filled in here

if [ ! -z "${CHANNEL_PATH}" ]; then
    if [ -d "${CHANNEL_PATH}" ]; then
        cd "${CHANNEL_PATH}"
    elif [ ! -d "${CHANNEL_PATH}" ]; then
        if [ ! -e "${CHANNEL_PATH}" ]; then
            echo "${CHANNEL_PATH} does not exist" >&2
            exit 1
        else
            cd "${CHANNEL_PATH%/*}"
        fi
    fi
fi

while [ ! -e 'manifest' ] && [ "${PWD}" != '/' ]; do
    cd ..
done

if [ ! -e 'manifest' ]; then
    echo "unable to locate roku project directory" >&2
    exit 1
fi

if [ -z "${ROKU_IP}" ]; then
    echo 'missing destination device: include a device ip or hostname' >&2
    exit 1
    # comment out above two lines & replace this with a fallback/default device ip if desired:
    ROKU_IP="" 
fi

# the destination device can be a hostname from the hosts file
[[ "${ROKU_IP}" =~ [^.0-9] ]] && ROKU_IP=$(cat /etc/hosts | awk "/${ROKU_IP}/ { print \$1 }")

# increment manifest build no.
if [ "${INCREMENTBUILDNO}" == "true" ]; then
    buildnumber=$(sed -n -E 's/build_version=([0-9]+)\s*$/\1/p' manifest)
    sed -i '' -E "s/(build_version)=[0-9]+/\1=$(expr ${buildnumber} + 1)/" manifest
fi

[ ! -d out ] && mkdir out
[ -e out/bundle.zip ] && rm out/bundle.zip
#sed -i '' -E 's/m\.(appMeta|tagInfo)\.title\.escape\(\)/m\.\1\.title\.replace\(" ", ""\)\.escape\(\)/;s/&rokuID=ROKU_ADS_APP_ID//' "source/main.brs" && \

[ -e .gitignore ] && \
    zip -qr out/bundle.zip . -x 'out/*' '*/*.old' '.git/*' '.gitignore' '*/.gitignore' 'README*' '.DS_Store' '*/.DS_Store' '@.gitignore' || \
    zip -qr out/bundle.zip . -x 'out/*' '*/*.old' '.git/*' '.gitignore' '*/.gitignore' 'README*' '.DS_Store' '*/.DS_Store'

if [ $? -eq 0 ]; then
    if ! curl -d '' "${ROKU_IP}:8060/keypress/home" &>/dev/null; then
        echo "no connection to roku (${ROKU_IP})"
        exit 1
    else
        case "${ROKU_IP}" in
            10.192.7.104) # rokuexpress
                # alternate format: curl -d '' '10.192.24.45:8060/keypress/InputHDMI1'
                [[ "$(curl -s '10.192.24.45:8060/query/active-app' &2>/dev/null)" =~ '<app id="tvinput.hdmi1"' ]] || \
                    (curl -d '' '10.192.24.45:8060/launch/tvinput.hdmi1' &>/dev/null; echo 'switching to input 1' >&2)
                ;;
            10.192.24.241) # roku3
                [[ "$(curl -s '10.192.24.45:8060/query/active-app' &2>/dev/null)" =~ '<app id="tvinput.hdmi2"' ]] || \
                    (curl -d '' '10.192.24.45:8060/launch/tvinput.hdmi2' &>/dev/null; echo 'switching to input 2' >&2)
                ;;
            10.192.7.93) # rokustick 
                [[ "$(curl -s '10.192.24.45:8060/query/active-app' &2>/dev/null)" =~ '<app id="tvinput.hdmi3"' ]] || \
                    (curl -d '' '10.192.24.45:8060/launch/tvinput.hdmi3' &>/dev/null; echo 'switching to input 3' >&2)
                ;;
        esac
    fi

    resp=$(curl -fLs -u "${ROKU_USER}:${ROKU_PASS}" --digest "${ROKU_IP}/plugin_install" \
        -F "archive=@out/bundle.zip;type:application/zip" -F "mysubmit=replace" -F "passwd=")
    result=$?
    msg="$(sed -n -E 's/.*<font color="red">([^<]+).*/\1/p' <<< "${resp}" | tr '[[:upper:]]' '[[:lower:]]')"
    [ -z "${msg}" ] && msg="error compiling or installing channel."
    echo "${msg}" >&2
    exit ${result}
fi

exit 1
